[tool]
[tool.poetry]
authors = ["Leon Sixt <github@leon-sixt.de>"]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
]
description = "Apply the sanity checks to relation networks."
homepage = "https://github.com/berleon/sanity_checks_for_relation_networks"
license = "MIT"
name = "lrp_relations"
packages = [
  { include = "lrp_relations" },
  { include = "tests", format = "sdist" },
  { include = "relation_network" },
]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
matplotlib = { version = "^3.2.1", optional = true }
numpy = { version = "^1.18.1", optional = true }
pandas = "^1.4.2"
python = ">=3.9,<4.0"
savethat = { git = "https://github.com/berleon/savethat", branch = "main" }
# scikit-learn = {version = "^0.22.1", optional = true}
#
# TODO: Poetry and torch do not work together.
#
# torch = [
#   { url = "https://download.pytorch.org/whl/cu113/torch-1.10.2%2Bcu113-cp39-cp39-linux_x86_64.whl", markers = "platform_machine == 'x86_64' and sys_platform == 'linux'"},
#   { url = "https://download.pytorch.org/whl/cpu/torch-1.10.2-cp39-cp39-manylinux2014_aarch64.whl", markers = "platform_machine == 'aarch64' and sys_platform == 'linux'" }
# ]
#    torchvision = [
#      { url = "https://download.pytorch.org/whl/cu113/torchvision-0.11.3%2Bcu113-cp39-cp39-linux_x86_64.whl", markers = "platform_machine == 'x86_64' and sys_platform == 'linux'"},
#      { url = "https://download.pytorch.org/whl/cpu/torchvision-0.11.3-cp39-cp39-manylinux2014_aarch64.whl", markers = "platform_machine == 'aarch64' and sys_platform == 'linux'" }
#    ]
# captum = "^0.5.0"
clevr-xai = { git = "https://github.com/berleon/clevr-xai.git", rev = "poetry" }
nltk = "^3.7"
types-toml = "^0.10.7"
ipython = "^8.4.0"
ipywidgets = "^7.7.0"
traitlets = "5.1.0"
networkx = "^2.8.2"
einops = "^0.4.1"
pip = "^22.1.2"
pyright = "^1.1.254"
seaborn = {git = "https://github.com/mwaskom/seaborn.git"}

[tool.poetry.dev-dependencies]

black = "^22.3.0"
flake8 = "^4.0.1"
isort = "^5.10.1"
mkdocs = "^1.3.0"
mkdocs-autorefs = "^0.4.1"
mkdocs-include-markdown-plugin = "^3.4.0"
mkdocs-material = "^8.2.14"
mkdocstrings = "^0.18.1"
pip = "^22.1"
pre-commit = "^2.19.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
python-lsp-server = { extras = ["all"], version = "^1.4.1" }
tox = "^3.20.1"
twine = "^4.0.0"
virtualenv = "^20.2.2"
pyright = "^1.1.252"
pygraphviz= "^1.9"

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | relation_network
)/
'''
include = '\.pyi?$'
line-length = 80
skip-string-normalization = false
target-version = ['py39']

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 80
multi_line_output = 3
skip_gitignore = true
use_parentheses = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]


[tool.pyright]
include = ["lrp_relations", "tests"]
exclude = ['relation_network/', "**/node_modules", "**/__pycache__"]
# venv = "env367"

reportPrivateImportUsage = false
reportMissingImports = true
reportMissingTypeStubs = false
reportUnboundVariable = false
pythonVersion = "3.9"
# pythonPlatform = "Linux"
